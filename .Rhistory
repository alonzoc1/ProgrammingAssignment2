m <- matrix(2 ,3)
m
n <- matrix(nrow = 2, ncol = 3)
n
m <- 1:10
dim(m) <- c(2,5)
m
x <- 1:3
y <- 10:12
cbind(x,y)
y <- 10:13
cbind(x, y)
load(test.r)
source("test.r")
source("./test.r")
getwd()
setwd("C:/Users/Alonzo/Dropbox/Career")
getwd()
setwd("./Data Science Coursera/")
getwd()
source("test.r")
source("test.r")
add2(3, 5)
above10(1)
x <- 1:100
x
above10(x)
above(x, 12)
library(datasets)
data(iris)
?iris
iris
mean(iris$Sepal.Length)
iris[,0]
class(iris)
iris
iris$Species == "virginica"
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica",]
virginicas <-iris[iris$Species == "virginica",]
virginicas
mean(virginicas$Sepal.Length)
apply(iris[,1:4],2,mean)
colMeans(iris)
rowMeans(iris,[,1;4])
rowMeans(iris[,1:4])
apply(iris,2,mean)
apply(iris,2,mean)
iris
iris[,1:4]
apply(iris[,1:4],2,mean)
data(mtcars)
mtcars
?mtcars
apply(mtcars,2,mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
split(mtcars,mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls()
exit()
quit()
setwd("./ProgrammingAssignment2")
source("cachematrix.R")
m <- matrix(c(4,7,2,6),nrow=2, ncol=2,byrow=TRUE)
m
solve(m)
cm <- makeCacheMatrix(m)
cm$get()
cm$getinv()
cacheSolve(cm)
source("cachematrix.R")
cm <- makeCacheMatrix(m)
cacheSolve(cm)
cm$getinv()
